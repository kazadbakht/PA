module SeqArr;

fimport IOArray from Data.Array.IO; // the Array type
fimport newArray_ from Data.Array.IO;
fimport readArray from Data.Array.IO;
fimport writeArray from Data.Array.IO;
fimport randomRIO from System.Random;

interface IPASeq {
	Unit run_();
	Unit initClique();
	Unit initRemain();
	
}

class PASeq(IOArray<Int, Int> toBe2, Int m0, Int d, Int k, Int num, Int n) implements IPASeq{

    Unit run_(){
	this.initClique();
	this.initRemain();
	Int i = 1;
	while (i <= (this.n - this.k) / (2 * this.d)) {
            Int temp = this.k + (i-1) * (2 * this.d);
            Int j = 2;
            Int source = 0;
            Int target = 0;
            while (j <= 2 * this.d) {
		source = randomRIO(Pair(1,temp));
                target = temp + j;
		Int value = readArray(toBe2, source);
		Bool conflict = False;
		Int tt = temp + 2;
		while(tt < target)
		{
			Int a = readArray(toBe2, tt);
			if (value == a)
				{conflict = True;}
			tt = tt + 2;
		}
		if (~conflict)
                {
			j = j + 2;
			writeArray(toBe2, target, value);
		}
           }
            i = i + 1;
        }
	//i = 1;
	//while(i <= n){
	  // Int a = readArray(toBe2, i);
	  // println(toString(a));
	   //i = i + 1;
	//}
    }
    Unit initClique() {
        Int index = 1;
        Int i = 1;
        Int j = 0;
        while (i <= this.m0 -1) {
            j = i + 1;
            while (j <= this.m0) {
		writeArray(this.toBe2, index, i);
                index = index + 1;
		writeArray(this.toBe2, index, j);
                index = index + 1;
                j = j + 1;
            }
            i = i + 1;
        }
	i = 1;
    }


    Unit initRemain() {
     Int temp = this.k + 1;
     Int i = this.m0 + 1;
     Int j = 1;
     while (i <= this.num) {
	j = 1;
        while (j <= d) {
	     writeArray(this.toBe2, temp, i);
	     temp = temp + 1;
	     writeArray(this.toBe2, temp, 0);
             temp = temp + 1;
             j = j + 1;
        }
        i = i + 1;
    }
   }
}


{
	Int num = 1000000;
	Int m0 = 5;
	Int m = 3;
	Int k = m0 * (m0 - 1);
	Int n = k + (num - m0) * 2*m;
	IOArray<Int,Int> arr = newArray_(Pair(1, n));
	IPASeq seq = new PASeq(arr, m0, m, k, num, n);
	Fut<Unit> f = seq!run_();
	f.get;
}

module AwaitOnArr;

fimport IOArray from Data.Array.IO; // the Array type
fimport newArray_ from Data.Array.IO;
fimport readArray from Data.Array.IO;
fimport writeArray from Data.Array.IO;

interface IAct{
	Unit run_(IOArray<Int, Int> arr);
	Unit run_2(IOArray<Int, Int> arr);
}

class Act implements IAct{
	Unit run_(IOArray<Int, Int> arr)
	{
		Int a  = readArray(arr, 100);
		await (readArray(arr, 100) != 0);
		// ABOVE INSTRUCTION does not work since readArray() will be evaluated to false once and it awaits on false forever  
		// INSTEAD, WE WANT THIS IN THE END: await (arr[100] != 0);
		println("PASSed");
	}
	Unit run_2(IOArray<Int, Int> arr){
		println("LET IT PASS!");
		writeArray(arr, 100, 1);	
	}
}

{
	Int n = 100000;
	IOArray<Int,Int> arr = newArray_(Pair(1, n));
	Int i = 1;
	while(i <= 100000)
	{
		writeArray(arr, i, 0);
		i = i+ 1;
	}
	IAct act = new Act();
	Fut<Unit> f = act!run_(arr);
	Fut<Unit> f2 = act!run_2(arr);
	f.get;
	f2.get;
}

